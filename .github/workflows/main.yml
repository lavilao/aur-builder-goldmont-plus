name: Build and Release Arch Linux Packages

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]  # Trigger releases on version tags

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: ${{ github.workspace }}

    - name: Set up build environment
      run: |
        # Update system and install dependencies
        pacman -Syu --noconfirm --needed base-devel git sudo

        # Create build user
        useradd -m builder
        echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

        # Set up build directory
        mkdir -p /github/workspace/pkgbuilds
        chown -R builder:builder /github/workspace

    - name: Find and build PKGBUILDs
      id: build
      run: |
        set -e
        cd "$GITHUB_WORKSPACE"

        # Get version/tag info
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          RELEASE_TAG=${GITHUB_REF#refs/tags/}
          RELEASE_TITLE="Release $RELEASE_TAG"
        else
          RELEASE_TAG=$(date +%Y%m%d)-$(git rev-parse --short HEAD)
          RELEASE_TITLE="Nightly Build $RELEASE_TAG"
        fi

        echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV
        echo "RELEASE_TITLE=$RELEASE_TITLE" >> $GITHUB_ENV

        # Debug: Show directory structure
        echo "::group::Current directory structure"
        find . -type d -exec ls -ld {} \;
        echo "::endgroup::"

        # Debug: Show PKGBUILD search
        echo "::group::PKGBUILD search results"
        find . -name PKGBUILD -print
        echo "::endgroup::"

        # Find and build all PKGBUILD files
        for pkgbuild in $(find . -name PKGBUILD); do
          echo "::debug::Found PKGBUILD at $pkgbuild"
          dir="$(dirname "$pkgbuild")"
          echo "::debug::PKGBUILD directory: $dir"
          pkgname="$(basename "$(realpath "$dir")")"
          echo "::debug::Package name resolved to: $pkgname"

          echo "::group::Building $pkgname"

          # Create clean build directory
          build_dir="/tmp/build/$pkgname"
          rm -rf "$build_dir"
          mkdir -p "$build_dir"

          # Copy files
          cp -r "$dir"/* "$build_dir/"
          chown -R builder:builder "$build_dir"

          # Build package
          cd "$build_dir"
          sudo -u builder makepkg -s --noconfirm --needed --cleanbuild

          # Move built packages
          mkdir -p "/github/workspace/pkgbuilds/$pkgname"
          echo "::debug::Moving packages to /github/workspace/pkgbuilds/$pkgname/"
          ls -la *.pkg.tar.zst || echo "::warning::No packages were built"
          mv -v ./*.pkg.tar.zst "/github/workspace/pkgbuilds/$pkgname/"

          echo "::endgroup::"
        done

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        release_name: ${{ env.RELEASE_TITLE }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./pkgbuilds/**/*.pkg.tar.zst
        asset_content_type: application/zstd
